buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.0.0'
}

jib {
    container {
        jvmFlags = ['-Dspring.profiles.active=docker']
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'java'

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

test {
    useJUnitPlatform()
}

targetCompatibility = 1.8


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
    testImplementation('org.codehaus.groovy:groovy-all:2.5.5')
    testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.spockframework:spock-core:1.2-groovy-2.5')
    testImplementation('org.spockframework:spock-spring:1.2-groovy-2.5')
    testImplementation('org.awaitility:awaitility:3.1.5')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine')
}
